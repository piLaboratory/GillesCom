% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Community.R
\name{Init_Community}
\alias{Init_Community}
\alias{abundance}
\alias{bdm}
\alias{history}
\alias{time}
\title{Community}
\usage{
Init_Community(abundance, interaction, K = 1000, b = 1, m = 0.1, d0 = 0,
  save.int = 1)

bdm(count = 1, progress = "text")

abundance()

time()

history()
}
\arguments{
\item{abundance}{vector of initial abundances of species in the community (set species not present to zero). For convenience, a single number is expanded as \code{rep(1,N)} (this also happens with parameters K, d0, b and m).}

\item{interaction}{matrix of interaction coefficients, see \code{\link{Interaction}}.}

\item{K}{carrying capacities of each species}

\item{b}{birth rates (constant)}

\item{m}{per capita migration rate in the metacommunity}

\item{d0}{death rate when N=0}

\item{save.int}{History saving interval (in simulated time units)}

\item{count}{Number of cycles to be simulated}

\item{progress}{Should a text bar be used? Currently, "text" will produce a text based bar, and \code{NULL} will produce none.}
}
\description{
Functions for generating and altering the simulated Community. Function \code{Init_Community}
initializes a simulation.

Function \code{bdm} runs one interaction of a Gillespie Algorithm of birth death and migration process in 
a system of generalized Lotka-Volterra system of competing species

Function \code{abundance} returns the current abundance vector for the community.

Function \code{time} returns the current simulation time for the community.

Function \code{history} returns a data frame in which each line corresponds to the species abundance
distribution at a different time.
}
\details{
Because of the way the interaction with the underlying c++ code is implemented, only one
community may be simulated at a time. Calling \code{Init_Community} more than once will
overwrite the previous simulation objects!
}
\examples{
# Initializes the community (in a global object)
Init_Community(100)
# Runs 1e6 iteractions of the birth-death-migration process
bdm(1e6)
# Gets and analyzes the abundance vector
(ab <- as.numeric(abundance()))
require(sads)
f <- sads::fitlnorm(ab[ab>0])
plot(f, which=1)
# Simulation internal time elapsed
time()
# History saves a line for each time period elapsed (starting with 0):
dim(history())
}

